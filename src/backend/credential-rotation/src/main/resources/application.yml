spring:
  application:
    name: credential-rotation-service
  datasource:
    url: jdbc:postgresql://localhost:5432/rotation
    username: rotation_user
    password: rotation_password
    hikari:
      minimum-idle: 5
      maximum-pool-size: 20
      idle-timeout: 300000
      max-lifetime: 1200000
      connection-timeout: 20000
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
  redis:
    host: localhost
    port: 6379
    password: ''
    ssl: false
    timeout: 2000
    database: 0
  flyway:
    enabled: true
    locations: classpath:db/migration

server:
  port: 8083
  servlet:
    context-path: /rotation
  tomcat:
    threads:
      max: 100
    max-connections: 5000

conjur:
  url: https://conjur.example.com
  account: payment-system
  authn-login: rotation-service
  ssl-certificate: /path/to/conjur/certificate.pem
  connection-timeout: 5000
  read-timeout: 3000
  retry-count: 3
  retry-backoff-multiplier: 1.5

rotation:
  default-transition-period-minutes: 60
  monitoring-interval-seconds: 30
  max-retry-attempts: 3
  auto-rotation-enabled: false
  auto-rotation-cron: '0 0 0 * * ?'
  notification-endpoint: http://payment-eapi:8080/api/notifications
  credential-rotation-threshold-days: 90
  excluded-clients: system-client,admin-client

logging:
  level:
    root: INFO
    com.payment.rotation: INFO
    org.springframework: WARN
    org.hibernate: WARN
  file:
    name: logs/credential-rotation.log
    max-size: 50MB
    max-history: 10
  pattern:
    console: '%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n'
    file: '%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n'

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true
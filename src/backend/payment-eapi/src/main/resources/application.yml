# Application configuration for Payment-EAPI service
# This is the base configuration file for the Payment API Security Enhancement project
# Environment-specific configurations (dev, test, staging, prod) will extend this configuration

spring:
  application:
    name: payment-eapi
  datasource:
    url: jdbc:postgresql://localhost:5432/payment
    username: payment_user
    password: payment_password
    hikari:
      minimum-idle: 5
      maximum-pool-size: 20
      idle-timeout: 600000
      max-lifetime: 1800000
      connection-timeout: 30000
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        show_sql: false
  redis:
    host: localhost
    port: 6379
    password: ''
    ssl: false
    timeout: 2000
    database: 0
    lettuce:
      pool:
        min-idle: 2
        max-idle: 10
        max-active: 20
        time-between-eviction-runs: 300000
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    clean-disabled: true
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}

server:
  port: 8080
  servlet:
    context-path: /api
  tomcat:
    threads:
      max: 100
    max-connections: 5000

# Conjur vault integration configuration for secure credential storage
conjur:
  url: https://conjur.example.com
  account: payment-system
  authn-login: payment-eapi-service
  ssl-certificate: /path/to/conjur/certificate.pem
  connection-timeout: 5000
  read-timeout: 3000
  retry-count: 3
  retry-backoff-multiplier: 1.5

# JWT token configuration for internal service authentication
token:
  issuer: payment-eapi
  audience: payment-sapi
  expiration-seconds: 3600
  renewal-enabled: true
  signing-key-path: conjur/path/to/signing-key

# Payment-SAPI integration configuration
payment-sapi:
  url: http://payment-sapi:8081
  connection-timeout: 5000
  read-timeout: 10000
  retry-count: 2

# Backward compatibility configuration for existing vendor integrations
backward-compatibility:
  enabled: true
  header-auth:
    client-id-header: X-Client-ID
    client-secret-header: X-Client-Secret

# Credential rotation configuration for zero-downtime credential updates
credential-rotation:
  transition-period-seconds: 86400  # 24 hours
  check-interval-seconds: 300       # 5 minutes
  monitoring-enabled: true

# Circuit breaker configuration for resilience patterns
circuit-breaker:
  conjur:
    failure-threshold: 50
    wait-duration-in-open-state: 30000
    permitted-number-of-calls-in-half-open-state: 10
  redis:
    failure-threshold: 50
    wait-duration-in-open-state: 15000
    permitted-number-of-calls-in-half-open-state: 20
  payment-sapi:
    failure-threshold: 50
    wait-duration-in-open-state: 15000
    permitted-number-of-calls-in-half-open-state: 20

# Logging configuration
logging:
  level:
    root: INFO
    com.payment: INFO
    org.springframework: WARN
    org.hibernate: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Spring Boot Actuator configuration for monitoring and management
management:
  endpoint:
    health:
      show-details: when-authorized
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      base-path: /management

# Security configuration
security:
  rate-limiting:
    enabled: true
    limit-per-minute: 100
    burst-capacity: 200
  headers:
    content-security-policy: "default-src 'self'"
    x-content-type-options: nosniff
    x-frame-options: DENY
    x-xss-protection: "1; mode=block"
    strict-transport-security: "max-age=31536000; includeSubDomains"

# Metrics configuration
metrics:
  enabled: true
  prefix: payment
  retention-days: 30
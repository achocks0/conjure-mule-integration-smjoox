apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: payment-system
  labels:
    app: redis
    component: cache
    tier: data
    part-of: payment-system
  annotations:
    kubernetes.io/change-cause: "Initial deployment of Redis Cache for token storage"
spec:
  replicas: 3
  serviceName: redis
  selector:
    matchLabels:
      app: redis
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app: redis
        component: cache
        tier: data
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9121"
        prometheus.io/path: "/metrics"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - redis
              topologyKey: kubernetes.io/hostname
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      initContainers:
      - name: init-redis
        image: busybox:1.34
        command:
        - sh
        - -c
        - mkdir -p /data/redis && chown -R 999:999 /data/redis
        volumeMounts:
        - name: redis-data
          mountPath: /data
        securityContext:
          runAsNonRoot: false
          runAsUser: 0
      containers:
      - name: redis
        image: redis:6.2-alpine
        imagePullPolicy: IfNotPresent
        command:
        - redis-server
        - /etc/redis/redis.conf
        ports:
        - name: redis
          containerPort: 6379
          protocol: TCP
        resources:
          requests:
            cpu: "2"
            memory: "4Gi"
          limits:
            cpu: "4"
            memory: "8Gi"
        env:
        - name: MASTER
          value: "true"
        - name: REDIS_REPLICATION_MODE
          value: "master"
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: redis-config
          mountPath: /etc/redis
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - name: redis-exporter
        image: oliver006/redis_exporter:v1.32.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: metrics
          containerPort: 9121
          protocol: TCP
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "200m"
            memory: "256Mi"
        env:
        - name: REDIS_ADDR
          value: "redis://localhost:6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secrets
              key: redis-password
        livenessProbe:
          httpGet:
            path: /metrics
            port: 9121
          initialDelaySeconds: 15
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
      volumes:
      - name: redis-config
        configMap:
          name: redis-config
          items:
          - key: redis.conf
            path: redis.conf
      terminationGracePeriodSeconds: 60
      serviceAccountName: redis-sa
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes:
      - ReadWriteOnce
      storageClassName: standard
      resources:
        requests:
          storage: 100Gi
# User and worker processes
user nginx nginx;
worker_processes auto;

# Error log and PID file
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    multi_accept on;
    use epoll;
}

http {
    # Include MIME types
    include mime.types;
    default_type application/octet-stream;

    # Logging format and settings
    log_format main '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" "$http_x_forwarded_for" '
                    '$request_time $upstream_response_time $pipe $upstream_cache_status '
                    '$upstream_addr $request_id';
    access_log /var/log/nginx/access.log main;

    # Basic optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Security settings
    server_tokens off;

    # Client request settings
    client_max_body_size 10m;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    client_body_timeout 60;
    client_header_timeout 60;
    send_timeout 60;

    # Compression settings
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # SSL/TLS settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Security headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; img-src 'self'; style-src 'self'; font-src 'self'; connect-src 'self'" always;
    add_header Referrer-Policy no-referrer-when-downgrade always;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/s;
    limit_conn_zone $binary_remote_addr zone=conn_limit:10m;

    # Upstream servers
    upstream payment_eapi {
        server payment-eapi:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream grafana {
        server grafana:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream kibana {
        server kibana:5601 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream prometheus {
        server prometheus:9090 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # HTTP to HTTPS redirect
    server {
        listen 80;
        server_name _;
        return 301 https://$host$request_uri;
    }

    # API server
    server {
        listen 443 ssl http2;
        server_name api.payment-system.example.com;

        # SSL certificates
        ssl_certificate /etc/nginx/ssl/payment-api.crt;
        ssl_certificate_key /etc/nginx/ssl/payment-api.key;
        ssl_dhparam /etc/nginx/ssl/dhparam.pem;

        # API endpoints
        location /api/v1/ {
            proxy_pass http://payment_eapi;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;

            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
            proxy_connect_timeout 60s;
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;

            # Rate limiting
            limit_req zone=api_limit burst=20 nodelay;
            limit_conn conn_limit 20;
        }

        # Health endpoint
        location /health {
            proxy_pass http://payment_eapi/actuator/health;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            access_log off;
        }
    }

    # Monitoring server
    server {
        listen 443 ssl http2;
        server_name monitoring.payment-system.example.com;

        # SSL certificates
        ssl_certificate /etc/nginx/ssl/monitoring.crt;
        ssl_certificate_key /etc/nginx/ssl/monitoring.key;
        ssl_dhparam /etc/nginx/ssl/dhparam.pem;

        # Basic authentication
        auth_basic "Restricted Access";
        auth_basic_user_file /etc/nginx/auth/.htpasswd;

        # Grafana
        location / {
            proxy_pass http://grafana;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Prometheus
        location /prometheus/ {
            proxy_pass http://prometheus/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Kibana
        location /kibana/ {
            proxy_pass http://kibana/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}